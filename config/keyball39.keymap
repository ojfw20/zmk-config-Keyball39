#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph,behaviour-hold-tap";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q      &kp W         &kp F     &kp P         &kp B                                    &kp J            &kp L  &kp U      &kp Y    &kp SEMI
&kp A      &kp R         &kp S     &kp T         &kp G                                    &kp M            &kp N  &kp E      &kp I    &kp O
&kp Z      &kp X         &kp C     &kp D         &kp V                                    &kp K            &kp H  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_WIN  &kp LALT  &kp LSHFT     &kp SPACE  &lt 4 TAB                     &lt 2 ENTER      &lt 1 BACKSPACE            &kp RSHFT
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp N1     &kp N2        &kp N3        &kp N4        &kp N5                        &kp N6        &kp N7        &kp N8        &kp N9        &kp N0
&kp TAB    &kp GRAVE     &kp C_PREV    &kp C_PP      &kp C_NEXT                    &kp SQT       &kp LARW      &kp DARW      &kp UARW      &kp RARW
&kp BSLH   &trans        &caps_word    &trans        &kp LALT                      &trans        &kp HOME      &kp PG_DN     &kp PG_UP     &kp END
&trans     &trans        &trans        &trans        &trans        &trans          &trans        &kp BACKSPACE                             &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp ESC          &trans        &trans        &trans        &trans                       &kp F1          &kp F2         &kp F3            &kp F4  &kp DEL
&trans           &kp LBKT      &kp LBRC      &kp LPAR      &kp EQUAL                    &kp F5          &kp F6         &kp F7            &kp F8  &kp SQT
&trans           &kp RBKT      &kp RBRC      &kp LPAR      &kp MINUS                    &kp F9          &kp F10        &kp F11           &kp F12 &kp trans
&trans           &trans        &trans        &trans        &trans       &trans          &trans          &trans                                   &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&sys_reset  &trans   &trans   &trans     &bt BT_SEL 0                   &tog 5   &trans  &trans  &trans  &sys_reset
&bootloader &trans   &trans   &trans     &bt BT_SEL 1                   &trans   &trans  &trans  &trans  &bootloader
&trans      &trans   &trans   &bt BT_CLR &bt BT_SEL 2                   &trans   &trans  &trans  &trans  &trans
&trans      &trans   &trans   &trans     &trans  &trans                 &trans   &trans                  &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp N1          &kp N2          &kp N3        &kp N4     &kp N5                  &kp N6         &kp N7     &kp N8  &kp N9     &kp N0
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none                   &kp PAGE_UP    &mkp LCLK  &none   &mkp RCLK  &mkp MCLK
&none           &none           &none         &none      &none                   &kp PAGE_DOWN  &none      &none   &none      &none
&none           &trans          &trans        &trans     &trans  &trans  &trans  &mo 3                                        &none
            >;
        };

        game_layer {
            label = "SCROLL";
            bindings = <
&kp B   &kp Q   &kp W   &kp E     &kp R                   &to 0   &kp U    &kp UARW &kp O    &trans
&kp T   &kp A   &kp S   &kp D     &kp G                   &trans  &kp LARW &kp DARW &kp RARW &trans
&kp Z   &kp X   &kp C   &kp V     &kp LCTRL               &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &kp LSHFT &lt 6 SPACE  &kp TAB          &trans  &trans                     &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &kp ESC                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp TAB                      &trans  &trans  &trans  &trans  &trans
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };
    };
};
